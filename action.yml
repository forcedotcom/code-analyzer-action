name: 'Code Analyzer Action'
description: 'GHA to run Code Analyzer'
author: 'Roopa Mohan'
inputs:
  github_token:
    required: true
    description: secret to use
  runtype:
    required: false
    description: 'Type of run. Valid values are "simple", "dfa", "all". Defaults to "simple".'
    default: 'simple'
  engine:
    required: false
    description: 'Provide comma-separated values of Code Analyzer engine(s) to excecute. Defaults to Code Analyzer defaults based on runtype.'
  projectdir:
    required: false
    description: 'Path to project repository. Necessary when invoking sfge engine. Defaults to current directory.'
    default: './.'
  resultascomments:
    required: false
    description: 'Boolean to indicate if violations should be posted as comments. Defaults to false.'
    default: false
runs:
  using: 'composite'
  steps:

  #### Part 1 - User input validation ####

  # Validate runtype and derive code analyzer command to execute
    - id: validate-runtype
      run: |
        if [[ "${{ inputs.runtype }}" == 'simple' ]]; then
          COMMAND="scanner:run"
          PROJDIR=""
        elif [[ "${{ inputs.runtype }}" == 'dfa' ]]; then
          COMMAND="scanner:run:dfa"
          PROJDIR="--projectdir ${{ inputs.projectdir }}"
        else
          echo "Unsupported runtype: ${{ inputs.runtype }}"
          exit 10
        fi
        echo "Command=$COMMAND" >> $GITHUB_OUTPUT
        echo "Projdir=$PROJDIR" >> $GITHUB_OUTPUT
      shell: bash


  # Populate --engine value based on input
    - id: populate-engine
      run: |
        if [[ "${{ inputs.engine }}" == "" ]]; then
          ENGINE=""
          echo "No specific engine requested. Using defaults"
        elif [[ "${{ inputs.engine}}" == *"sfge"* ]]; then
          ENGINE="--engine ${{ inputs.engine }}"
        else
          ENGINE="--engine ${{ inputs.engine }}"
        fi
        echo "Engine=$ENGINE" >> $GITHUB_OUTPUT
      shell: bash

    - name: Display derived information
      run: |
        echo "Command = ${{steps.validate-runtype.outputs.Command}}"
        echo "Engine = ${{steps.populate-engine.outputs.Engine}}"
        echo "Projdir = ${{steps.validate-runtype.outputs.Projdir}}"
      shell: bash

  #### Part 2 - Setup dependencies ####

    - name: Install Node
      - uses: actions/setup-node@v3
        with:
          node-version: 'lts'

    - name: Install JVM
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

    - name: Install Salesforce CLI
      run: npm install -g sfdx-cli

    - name: Install Salesforce Code Analyzer
      run: sfdx plugins:install @salesforce/sfdx-scanner

  #### Part 3 - Execute code analyzer ####

    - name: 
      run: |
        sfdx ${{steps.validate-runtype.outputs.Command}} \
          --target "./" \
          ${{steps.populate-engine.outputs.Engine}}" \
          "Projdir = ${{steps.validate-runtype.outputs.Projdir}}" \
          --format csv
