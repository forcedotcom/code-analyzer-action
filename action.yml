name: 'Code Analyzer Action'
description: 'GHA to run Code Analyzer'
author: 'Roopa Mohan'
inputs:
  github_token:
    required: true
    description: secret to use
  runtype:
    required: false
    description: 'Type of run. Valid values are "simple", "dfa", "all". Defaults to "simple".'
    default: 'simple'
  targethome:
    required: true
    description: 'Directory with source files. Changes from only these files will be considered for analysis.'
  engine:
    required: false
    description: 'Provide comma-separated values of Code Analyzer engine(s) to excecute. Defaults to Code Analyzer defaults based on runtype.'
  projectdir:
    required: false
    description: 'Path to project repository. Necessary when invoking sfge engine. Defaults to current directory.'
    default: './.'
  resultascomments:
    required: false
    description: 'Boolean to indicate if violations should be posted as comments. Defaults to false.'
    default: false

runs:
  using: 'composite'
  steps:

  #### Part 1 - User input validation ####

  # Validate runtype and derive code analyzer command to execute
    - id: validate-runtype
      run: |
        echo "Validating runtype . . ."
        if [[ "${{ inputs.runtype }}" == 'simple' ]]; then
          COMMAND="scanner:run"
          PROJDIR=""
        elif [[ "${{ inputs.runtype }}" == 'dfa' ]]; then
          COMMAND="scanner:run:dfa"
          PROJDIR="--projectdir ${{ inputs.projectdir }}"
          echo "Projdir=$PROJDIR" >> $GITHUB_OUTPUT
        else
          echo "Unsupported runtype: ${{ inputs.runtype }}"
          exit 10
        fi
        echo "Command=$COMMAND" >> $GITHUB_OUTPUT
      shell: bash


  # Populate --engine value based on input
    - id: populate-engine
      run: |
        echo "Populating parameters . . ."
        if [[ "${{ inputs.engine }}" == "" ]]; then
          ENGINE=""
          echo "No specific engine requested. Using defaults"
        elif [[ "${{ inputs.engine}}" == *"sfge"* ]]; then
          ENGINE="--engine \"${{ inputs.engine }}\""
          PROJDIR="--projectdir ${{ inputs.projectdir }}"
          echo "Projdir=$PROJDIR" >> GITHUB_OUTPUT
        else
          ENGINE="--engine ${{ inputs.engine }}"
        fi
        echo "Engine=$ENGINE" >> $GITHUB_OUTPUT
      shell: bash

    - name: Display derived information
      run: |
        echo "Confirming parameters . . ."
        echo "Command = ${{steps.validate-runtype.outputs.Command}}"
        echo "Engine = ${{steps.populate-engine.outputs.Engine}}"
        echo "Projdir = ${{steps.validate-runtype.outputs.Projdir}}"
      shell: bash

  #### Part 2 - Setup dependencies ####

  # Setup node
    - uses: actions/setup-node@v3
      with:
        node-version: 'lts/*'

  # Setup JVM
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install Salesforce CLI
      run: |
        echo "Installing Salesforce CLI . . ."
        npm install -g sfdx-cli
      shell: bash

    - name: Install Salesforce Code Analyzer
      run: |
        echo "Installing Code Analyzer . . ."
        sfdx plugins:install @salesforce/sfdx-scanner
      shell: bash

  #### Part 3 - Checkout code and determine target files
    - uses: actions/checkout@v3

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v35
      with:
        files: ${{ inputs.targethome }}

    - id: populate-target
      shell: bash
      run: |
        TARGET_LIST=""
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          TARGET_LIST=$file,$TARGET_LIST
        done
        TARGET=${TARGET_LIST::-1}
        echo "Target=$TARGET" >> $GITHUB_OUTPUT


  #### Part 3 - Execute code analyzer ####

    - run: mkdir -p $HOME/sfca
      shell: bash

    - name: Execute Code Analyzer
      run: |
        sfdx ${{steps.validate-runtype.outputs.Command}} \
          --target "${{steps.populate-target.outputs.Target}}" \
          ${{steps.populate-engine.outputs.Engine}} \
          ${{steps.validate-runtype.outputs.Projdir}} \
          --outfile ./sfca_results.csv
      shell: bash

    - uses: actions/upload-artifact@v3
      with:
        name: SFCA-Results
        path: ./sfca_results.csv


  ##### Part 4 - Process output
    - run: |
        curl \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{inputs.github_token}}"\
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/forcedotcom/tdx23-sfca-demo/pulls/1/comments \
          -d '{"body":"Test comment","commit_id":"f07ab6ac4c33ab3035042200b8d00d20663e95b1","path":"force-app/main/default/classes/Cat.cls","line":2}'
    - shell: bash